@model ReflectionIT.Mvc.Paging.PagingList<BookShop.Models.Author>
@using ReflectionIT.Mvc.Paging

<table id="mytable" data-url="@Url.Action("index")" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.SortableHeaderFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th class="text-center">
                مشاهده کتاب ها
            </th>
            <th class="text-center">عملیات</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td class="text-center">
                    <a asp-action="AuthorBooks" asp-route-id="@item.AuthorID" class="btn btn-info btn-sm">مشاهده کتاب ها</a>
                </td>
                <td class="text-center">
                    <button type="button" class="btn btn-success btn-icon" data-toggle="ajax-modal" data-url="@Url.Action("Edit","Authors",values:new {id=item.AuthorID})">
                        <i class="fa fa-edit text-white"></i>
                    </button>
                    <button type="button" class="btn btn-danger btn-icon" data-toggle="ajax-modal" data-url="@Url.Action("Delete","Authors",values:new {id=item.AuthorID})">
                        <i class="fa fa-trash text-white"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav>
    @await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
</nav>